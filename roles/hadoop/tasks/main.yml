---

- name: os dependened vars
  include_vars: '{{ item }}'
  with_first_found:
  - files:
      - '{{ ansible_os_family }}.yml'
      - 'default.yml'
    paths: '{{ role_path }}/vars/os'
- name: Install the dependence packages
  package: name="{{ item }}" state=present
  with_items: '{{ hadoop_dependency }}'

- name: Prepare variable
  block:
    - name: Prepare variable
      set_fact:
        pkg_setting:
          name: hadoop
          url: "{{ pkg_ic.url }}"
          tmp_path: "/tmp/{{ pkg_ic.basename }}"
          install_path: "{{ pkg_ic.install_path }}"
          hadoop_path: "{{ pkg_ic.install_path }}/{{ pkg_ic.basename }}"
          hadoop_home: "{{ pkg_ic.install_path }}/hadoop"
          file: "{{ pkg_ic.file }}"
          version: "{{ pkg_ic.version }}"
    - name: Print variable
      debug:
        var: pkg_setting

- name: List hadoop nodes (cluster mode)
  set_fact:
    hadoop_nodes:
      main: '{{ hostvars | hosts_with("is_namenode", True) | union ( hostvars | hosts_with("is_resource_mgr", True)) }}'
      hdfs: '{{ hostvars | hosts_with("is_hdfs", True) }}'
      namenodes: '{{ hostvars | hosts_with("is_namenode", True) | union ( hostvars | hosts_with("is_secondarynamenode", True)) }}'
      datanodes: '{{ hostvars | hosts_with("is_datanode", True) }}'
      yarn: '{{ hostvars | hosts_with("is_yarn", True) }}'
      resource_mgrs: '{{ hostvars | hosts_with("is_resource_mgr", True) }}'
      node_mgrs: '{{ hostvars | hosts_with("is_node_mgr", True) }}'
      mapred: '{{ hostvars | hosts_with("is_namenode", True) | union ( hostvars | hosts_with("is_secondarynamenode", True)) | union ( hostvars | hosts_with("is_mr", True)) }}'
  when: cluster_mode | default(true)
- name: List hadoop nodes (single mode)
  set_fact:
    hadoop_nodes:
      main: ['{{ inventory_hostname }}']
      hdfs: ['{{ inventory_hostname }}']
      namenodes: ['{{ inventory_hostname }}']
      datanodes: ['{{ inventory_hostname }}']
      yarn: ['{{ inventory_hostname }}']
      resource_mgrs: ['{{ inventory_hostname }}']
      node_mgrs: ['{{ inventory_hostname }}']
  when: not (cluster_mode | default(true))

- name:
  set_fact:
    namenode_hostname: "{{ hostvars[hadoop_nodes.namenodes[0]].hostname}}"
    resource_mgr_hostname: "{{ hostvars[hadoop_nodes.resource_mgrs[0]].hostname}}"


- include_tasks: config_firewall.yml
- include_tasks: cleanup.yml
- include_tasks: extract_hadoop.yml
- include_tasks: config_context_users.yml
- include_tasks: config_context_hosts.yml
- include_tasks: config_daemons.yml
- include_tasks: setup_hadoop.yml
- include_tasks: run_daemons.yml

