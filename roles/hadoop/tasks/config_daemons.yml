---

- name: Present HDFS Directorys
  block:
    - name: Present Namenode Directorys
      file:
        path: "{{ hadoop_conf.namenode_name_dir }}"
        owner: "{{ hadoop_conf.users.hdfs.name }}"
        group: "{{ hadoop_conf.group }}"
        mode: 0775
        state: directory
      when: is_namenode
    - name: Present Datanode Directorys
      file:
        path: "{{ hadoop_conf.datanode_data_dir }}"
        owner: "{{ hadoop_conf.users.hdfs.name }}"
        group: "{{ hadoop_conf.group }}"
        mode: 0775
        state: directory
      when: is_namenode

- name: Set HADOOP_LOG_DIR
  block:
    - name: Present Hadoop LOG Directorys
      file:
        path: "{{ hadoop_conf.hadoop_log_dir }}"
        owner: "{{ hadoop_conf.users.hdfs.name }}"
        group: "{{ hadoop_conf.group }}"
        mode: 0775
        state: directory
    - name: Present Hadoop YARN LOG Directorys
      file:
        path: "{{ hadoop_conf.hadoop_yarn_log_dir }}"
        owner: "{{ hadoop_conf.users.yarn.name }}"
        group: "{{ hadoop_conf.group }}"
        mode: 0775
        state: directory
    - name: Present Hadoop MAPRED LOG Directorys
      file:
        path: "{{ hadoop_conf.hadoop_mapred_log_dir }}"
        owner: "{{ hadoop_conf.users.mapred.name }}"
        group: "{{ hadoop_conf.group }}"
        mode: 0775
        state: directory
    - name: export HADOOP_LOG_DIR ...
      blockinfile:
        path: /etc/environment
        marker: "# {mark} HADOOP LOG BLOCK"
        block: |
          HADOOP_LOG_DIR={{ hadoop_conf.hadoop_log_dir }}
          YARN_LOG_DIR={{ hadoop_conf.hadoop_yarn_log_dir }}
          HADOOP_MAPRED_LOG_DIR={{ hadoop_conf.hadoop_mapred_log_dir }}
    - name: export HADOOP_LOG_DIR ...
      blockinfile:
        path: "{{ sys_profile }}"
        marker: "# {mark} HADOOP LOG BLOCK"
        block: |
          export HADOOP_LOG_DIR={{ hadoop_conf.hadoop_log_dir }}
          export YARN_LOG_DIR={{ hadoop_conf.hadoop_yarn_log_dir }}
          export HADOOP_MAPRED_LOG_DIR={{ hadoop_conf.hadoop_mapred_log_dir }}

- name: Copy and Present HADOOP_CONF_DIR
  block:
    - name: Present hadoop_conf_dir - {{ hadoop_conf.hadoop_conf_dir }}
      file: path="{{ hadoop_conf.hadoop_conf_dir }}" state=directory
    - name: Raw Copy
      shell: |
        rm -rf {{ hadoop_conf.hadoop_conf_dir }}/*
        cp -rf {{ pkg_setting.hadoop_home }}/etc/hadoop/* {{ hadoop_conf.hadoop_conf_dir }}
    - name: Copy template file
      copy:
        src: "{{ hadoop_conf.hadoop_conf_dir }}/{{ item }}.template"
        dest: "{{ hadoop_conf.hadoop_conf_dir }}/{{ item }}"
        remote_src: yes
      with_items:
        - mapred-queues.xml
        - mapred-site.xml
    - name: Export HADOOP_CONF_DIR ...
      lineinfile:
        dest: /etc/environment
        regexp: '^HADOOP_CONF_DIR='
        line: HADOOP_CONF_DIR={{ hadoop_conf.hadoop_conf_dir }}
    - name: Export HADOOP_CONF_DIR ...
      lineinfile:
        dest: "{{ sys_profile }}"
        regexp: '^export HADOOP_CONF_DIR='
        line: export HADOOP_CONF_DIR={{ hadoop_conf.hadoop_conf_dir }}

- name: Update Hadoop env
  block:
    - name: fetch JAVA_HOME
      command: /bin/bash -l -c "echo $JAVA_HOME"
      changed_when: false
      register: fetch_java_home
    - debug: msg="JAVA_HOME={{ fetch_java_home.stdout}}"
    - name: set hadoop JAVA_HOME
      lineinfile:
        dest: "{{ hadoop_conf.hadoop_conf_dir }}/hadoop-env.sh"
        regexp: '^export JAVA_HOME='
        line: 'export JAVA_HOME={{ fetch_java_home.stdout}}'
    - name: Set HADOOP_LOG_DIR to hadoop-env.sh
      lineinfile:
        dest: "{{ hadoop_conf.hadoop_conf_dir }}/hadoop-env.sh"
        regexp: '^export HADOOP_LOG_DIR='
        line: export HADOOP_LOG_DIR={{ hadoop_conf.hadoop_log_dir }}
    - name: Set HADOOP_MAPRED_LOG_DIR to mapred-env.sh
      lineinfile:
        dest: "{{ hadoop_conf.hadoop_conf_dir }}/mapred-env.sh"
        regexp: '^export HADOOP_MAPRED_LOG_DIR='
        line: export HADOOP_MAPRED_LOG_DIR={{ hadoop_conf.hadoop_log_dir }}

- name: Update slaves
  block:
    - name: update hdfs slaves
      include_tasks: config_context_slaves.yml slaves={{ hadoop_nodes.datanodes }}
      when: inventory_hostname in hadoop_nodes.namenodes
    - name: update yarn slaves
      include_tasks: config_context_slaves.yml slaves={{ hadoop_nodes.node_mgrs }}
      when: inventory_hostname in hadoop_nodes.resource_mgrs
  when: cluster_mode | default(true)


